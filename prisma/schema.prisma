generator client {
      provider = "prisma-client-js"
}

datasource db {
      provider = "postgresql"
      url      = env("DATABASE_URL")
}

model User {
      id         Int       @id @default(autoincrement())
      name       String    @db.VarChar(255)
      email      String    @db.VarChar(255)
      password   String
      individual Boolean?
      Business   Boolean?
      image      String?
      programs   Program[]
      createdAt  DateTime  @default(now())
      updatedAt  DateTime  @updatedAt
      Profile    Profile[]
}

model Profile {
      id     Int     @id @default(autoincrement())
      bio    String?
      user   User    @relation(fields: [userId], references: [id])
      userId Int     @unique
}

model Program {
      id            Int          @id @default(autoincrement())
      name          String       @db.VarChar(255)
      description   String
      subcategory   Subcategory  @relation(fields: [subcategoryId], references: [id])
      rates         Rate[]
      createdAt     DateTime     @default(now())
      updatedAt     DateTime     @updatedAt
      subcategoryId Int
      curriculum    Curriculum[]
      User          User?        @relation(fields: [UserId], references: [id])
      UserId        Int?
}

model Rate {
      id        Int      @id @default(autoincrement())
      rate      Int
      createdAt DateTime @default(now())
      updatedAt DateTime @updatedAt
      Program   Program? @relation(fields: [programId], references: [id])
      programId Int?
}

model Curriculum {
      id        Int      @id @default(autoincrement())
      name      String   @db.VarChar(255)
      createdAt DateTime @default(now())
      updatedAt DateTime @updatedAt
      Program   Program? @relation(fields: [programId], references: [id])
      programId Int?
}

model Category {
      id            Int           @id @default(autoincrement())
      name          String        @db.VarChar(255)
      subcategories Subcategory[]
      createdAt     DateTime      @default(now())
      updatedAt     DateTime      @updatedAt
}

model Subcategory {
      id         Int       @id @default(autoincrement())
      name       String    @db.VarChar(255)
      category   Category  @relation(fields: [categoryId], references: [id])
      createdAt  DateTime  @default(now())
      updatedAt  DateTime  @updatedAt
      categoryId Int
      Program    Program[]
}

model Sales {
      id        Int      @id @default(autoincrement())
      email     String   @db.VarChar(255)
      createdAt DateTime @default(now())
      updatedAt DateTime @updatedAt
}
